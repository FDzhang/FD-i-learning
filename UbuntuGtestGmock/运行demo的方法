编译并运行gtest or gmock案例的步骤
    0)建立一个demo文件夹，在此文件夹下建两个文件夹src,include
    1)将.cpp文件放入建立的src文件夹中
    2)将.h文件放入建立的include文件夹中
    3)编写一个CMakeLists.txt  （放在demo文件夹下）
    4)cmake CMakeLists.txt  #编译
      make    #生成可执行文件 demo 
      ./demo    #运行demo


附录：
1，cmakeCMakeLists.txt文件模板
#1.cmake verson，指定cmake版本 
cmake_minimum_required(VERSION 3.2)

#2.project name，指定项目的名称，一般和项目的文件夹名称对应
PROJECT(test_sqrt)  #此处可根据需要进行修改 

#3.head file path，头文件目录
INCLUDE_DIRECTORIES(
include
)

#4.source directory，源文件目录
AUX_SOURCE_DIRECTORY(src DIR_SRCS)

#5.set environment variable，设置环境变量，编译用到的源文件全部都要放到这里，否则编译能够通过，但是执行的时候会出现各种问题，比如"symbol lookup error xxxxx , undefined symbol"
SET(TEST_MATH
${DIR_SRCS}
)

#6.add executable file，添加要编译的可执行文件
ADD_EXECUTABLE(${PROJECT_NAME} ${TEST_MATH})

#7.add link library，添加可执行文件所需要的库，比如我们用到了libm.so（命名规则：lib+name+.so），就添加该库的名称
TARGET_LINK_LIBRARIES(${PROJECT_NAME} gtest gtest_main gmock gmock_main pthread)    #此处可能需要增，删，改
